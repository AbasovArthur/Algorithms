Есть замечательная детская игра в которой перекладывают диски с одной пирамидки на другую.
URL [ https://ollgames.ru/xanojskaya-bashnya/?ysclid=lems5111ia61702102 ]
Напишите программу, которая бы показывала последовательность игрока для того, чтобы выиграть.
Например: 
Для базового случая: вывод может выглядеть так


с 1 на 3
с 1 на 2
с 3 на 2
с 1 на 3
со 2 на 1
со 2 на 3
с 1 на 2
с 1 на 3


Проделав это можно перейти на следующий уровень

c 1 на 2
c 1 на 3
c 2 на 3
c 1 на 2
c 3 на 1
c 3 на 2
c 1 на 2
c 1 на 3
c 2 на 3
c 2 на 1
c 3 на 1
c 2 на 3
c 1 на 2
c 1 на 3
c 2 на 3
решение:

Рекурсия — это когда функция вызывает сама себя в своем теле.
В алгоритме Ханойской башни исп рекурсивный подход,
потому что задача может быть разложена на меньшие подзадачи с похожей структурой.
Когда мы разбиваем задачу на подзадачи, каждая подзадача имеет на один диск меньше, и так далее, до тех пор, пока мы не достигнем самого простого случая с одним диском (n=1).

(n - 1) в функции указывает на то, что мы решаем подзадачи для уменьшения количества дисков.
Рекурсия продолжается, пока n не станет = 1, это условие обеспечивает правильную последовательность действий для решения задачи.

hanoi(n - 1, src, aux, dst); 
выводится текущий шаг перемещения диска со стержня src на стержень dst, через вспомогательный стержень aux,используя целевой стержень dst как временное хранилище;

hanoi(n - 1, aux, dst, src);
Далее мы перемещаем диск (n - 1) с вспомогательного стержня aux на целевой стержень dst, используя исходный стержень src в качестве временного хранилища.

Сложность алгоритма Ханойской башни в нотации big O выражается как:
O(2^n - 1)

где n - кол-во дисков.
Это указывает на экспоненциальную зависимость
количества операций от количества дисков, без учета конкретного значения n.
Это иллюстрирует, то что быстро будет растет число операций в зависимости от размера входных данных (n).

С алгоритмом Ханойской башни, сложность растет экспоненциально по отношению к количеству дисков, что делает этот алгоритм менее эффективным при большом количестве дисков.

n = 3
O(2^3 - 1) = O(8 - 1) = O(7)
для перемещения 3-x дисков потребуется сделать 7 операций.

n = 6
O(2^6 - 1) = O(64 - 1) = O(63)
для перемещения 6 дисков потребуется сделать 63 операции.

n = 9
O(2^512 - 1) = O(512 - 1) = O(511)
для перемещения 9 дисков потребуется сделать 511 операции.
